import numpy as np
from scipy.signal import savgol_filter
from kneed import KneeLocator
import matplotlib.pyplot as plt


ignore_n =2
y = [0.2601063549518585, 0.04160303622484207, 0.0027615418657660484, 0.0004963925457559526, 0.002809627680107951, 0.0009397957473993301, 0.004932232666760683, 0.00025104745873250067, 0.0002582488814368844, 0.00018648523837327957, 0.00018648523837327957, 0.0037027045618742704, 0.00016769897774793208, 0.00026455006445758045, 0.00016769897774793208, 0.0026410140562802553, 0.002333788899704814, 0.0006245186668820679, 5.70468619116582e-05, 0.0026619473937898874, 0.0014095514779910445, 0.0058319177478551865, 0.00192785554099828, 0.00192785554099828, 0.00016769897774793208, 7.800923776812851e-05, 0.0010704960441216826, 0.005890175700187683, 0.002796294866129756, 0.005089794751256704, 0.00026998110115528107, 0.002618736820295453, 0.0009577892487868667, 0.00251922314055264, 0.0033700920175760984, 0.03891579061746597, 0.0016470924019813538, 0.0014154160162433982, 0.00023651871015317738, 0.0014175360556691885, 0.0006641365471296012, 0.0033041764982044697, 0.0015171834966167808, 0.002057638019323349, 0.0010359111474826932, 0.004132376983761787, 0.00013167606084607542, 0.0028065911028534174, 0.0005920401308685541, 0.001974646467715502, 0.0006246587727218866, 0.0009965973440557718, 0.0009893160313367844, 0.00024625801597721875, 0.0010369232622906566, 8.641027670819312e-05, 6.105941429268569e-05, 0.00016990891890600324, 0.0014933970523998141, 0.0019638657104223967, 0.0009523142944090068, 0.0009015618707053363, 0.0007783442852087319, 0.0007019845070317388, 0.0011874896008521318, 0.0033142180182039738, 0.00011121791612822562, 0.00011121791612822562, 0.00011121791612822562, 0.001055738888680935, 0.002684087259694934, 0.0008434379706159234, 0.0010186665458604693, 0.00026829823036678135, 0.001141510671004653, 0.00012423234875313938, 0.0031404097098857164, 0.000372448586858809, 0.0014863187680020928, 0.00043098139576613903, 0.0014339516637846828, 0.001543806167319417, 0.004108413588255644, 0.04177451506257057, 0.00013745928299613297, 0.0011062297271564603, 0.00016593447071500123, 0.0008330901619046926, 0.001041353796608746, 0.0006718054064549506, 0.00025202552205882967, 0.0008741099154576659, 0.0006439117714762688, 0.0006439117714762688, 0.0006439117714762688, 0.0005699963076040149, 0.0008044647984206676, 0.0006439118296839297, 0.0009648849372752011, 0.0002284100919496268, 6.537316949106753e-05, 0.00012434678501449525, 0.000749171304050833, 0.00044270389480516315, 0.0014048789162188768, 0.004330999217927456, 0.0010720129357650876, 0.0008217441500164568, 0.000993046211078763, 0.0011889109155163169, 0.007139565423130989, 0.000713313405867666, 0.00013575695629697293, 0.0005720755434595048, 0.0012297793291509151, 0.0008169491775333881, 0.0006439117714762688, 0.007912961766123772, 0.00013888579269405454, 0.00015669417916797101, 0.0012064393376931548, 0.0003891925443895161, 0.0006439117714762688, 0.0002978990669362247, 0.0005993057857267559, 0.000934091629460454, 0.0007054203888401389, 0.00016437482554465532, 0.0008813005988486111, 0.0011914693750441074, 0.0007343415636569262, 0.0008868344593793154, 0.001102742739021778, 0.0006188135594129562, 0.0008231237879954278, 0.00028011910035274923, 0.0004584474372677505, 0.00028011910035274923, 0.0004644746659323573, 0.000809812976513058, 0.00013820186723023653, 7.507151167374104e-05, 0.04343850910663605, 0.005605470389127731, 0.0003763966669794172, 0.005605469923466444, 0.007847560569643974, 0.0005830259760841727, 0.0003486004425212741, 0.0003953081031795591, 0.0029379467014223337, 0.002383285900577903, 0.0029379467014223337, 0.00028622118406929076, 0.00023424028768204153, 0.00015863227599766105, 0.00021010417549405247, 0.0007479677442461252, 8.589913340983912e-05, 0.00021505291806533933, 0.00015171505219768733, 0.00015171505219768733, 0.006236702669411898, 0.0005192811950109899, 0.0033455900847911835, 0.0067015825770795345, 0.0006583594949916005, 0.00031193310860544443, 0.00034836994018405676, 0.00029299399466253817, 0.00035501111415214837, 0.0011776681058108807, 6.500292511191219e-05, 0.0001260867138626054, 0.00019616493955254555, 0.0004964150139130652, 0.00029299399466253817, 0.0006554482970386744, 0.00012498520663939416, 0.000141557160532102, 0.04155025631189346, 5.68016039323993e-05, 0.00010677829413907602, 0.00020969222532585263, 0.00028413115069270134, 0.0002870139433071017, 0.00015259036445058882, 4.212841304251924e-05, 8.718029857845977e-05, 7.365437340922654e-05, 5.856007192051038e-05, 6.850901991128922e-05, 0.00018932577222585678, 0.00029691029340028763, 0.0012874507810920477, 0.004833345301449299, 0.00020181354193482548, 2.923394276876934e-05, 2.923394276876934e-05, 2.923394276876934e-05, 2.923394276876934e-05, 0.0002650452370289713, 0.000738041358999908, 3.8991638575680554e-05, 0.00020237428543623537, 7.820073369657621e-05, 5.911345942877233e-05, 8.267193334177136e-05, 0.00030214039725251496, 0.00010639780521159992, 6.873862002976239e-05, 0.0003352811327204108, 0.0004150196327827871, 0.0001926012191688642, 8.076202357187867e-05, 0.00010504465899430215, 0.000334009004291147, 0.03481272980570793, 0.001535063493065536, 0.00016447108646389097, 0.00020358727488201112, 0.0005860530072823167, 0.00015530025120824575, 0.00011500871914904565, 0.00010382345499237999, 0.0015558860031887889, 0.00027941534062847495, 0.0003394267405383289, 0.00016520745703019202, 0.0017085879808291793, 0.0001944857503985986, 0.0001944857503985986, 0.0001944857503985986, 0.00021879647101741284, 0.00013420436880551279, 0.00034302807762287557, 0.001505658496171236, 0.0007596289506182075, 0.00031237443909049034, 0.00031237443909049034, 0.00016207966837100685, 0.00044466654071584344, 0.00048758037155494094, 0.0001133864134317264, 5.894988134969026e-05, 0.00022419699234887958, 0.00010007219680119306, 0.00011885473213624209, 0.0015791334444656968, 7.89566693129018e-05, 7.89566693129018e-05, 0.00010856542212422937, 7.89566693129018e-05, 0.00011121791612822562, 0.0018160156905651093, 0.00017359096091240644, 0.00019528983102645725, 0.00024646896054036915, 0.0001941300433827564, 0.002282865345478058, 0.0002456593792885542, 0.00033064227318391204, 0.000308211543597281, 0.0021514964755624533, 0.00014538475079461932, 4.069440910825506e-05, 0.0003123870410490781, 3.3470041671535e-05, 0.0016027360688894987, 0.00012020520807709545, 0.00012020520807709545, 0.00013082441000733525, 0.00013082441000733525]

# x = range(0, len(y))
x = np.arange(len(y) - ignore_n)

# print('x: ', len(x))
y = np.array(y)
idx_y = np.argsort(y)[::-1]

y = y[idx_y]

# print('y: ' ,len(y))

y = y[ignore_n:]
# print('new y: ' ,len(y))

half_length = 3 # int(len(y)/2)


if half_length % 2 == 0:
    window = half_length + 1
else:
    window = half_length

print('window size: ', window)

if window <= 1:
    window = 3

smoothed_y = savgol_filter(y, window, 1)

sensitivity = 1


kn = KneeLocator(x, y, curve='convex', direction='decreasing', S=sensitivity)
print('kn: ', kn.knee)

kn_smooth = KneeLocator(x, smoothed_y, curve='convex', direction='decreasing', S=sensitivity)
print('smoothed kn: ', kn_smooth.knee)


fig, (ax1, ax2) = plt.subplots(2)


ax2.set_xlabel('k')
ax2.set_ylabel('PageRank values')
ax2.plot(x, smoothed_y, 'rx-')
ax2.vlines(kn_smooth.knee, plt.ylim()[0], plt.ylim()[1], linestyles='dotted')

ax1.set_xlabel('k')
ax1.set_ylabel('PageRank values')
ax1.plot(x, y, 'bx-')
ax1.vlines(kn.knee, plt.ylim()[0], plt.ylim()[1], linestyles='dashed')



plt.show()
